import math
'''
11 = 3^2 + 1^2 + 1^2
이러한 숫자들을 어떻게 DP로 표현할 지 고민하는 것이 먼저이다.

큰 제곱수는 작은 제곱수의 합으로 이루어진다.
따라서, 더 이상 작을 수 없는 제곱수부터 갯수를 계산한다.
dp[1] = 1, dp[2] = 2, dp[3] = 3, dp[4] = 1 dp[5] = 2
이 때 dp[5]는 최악의 경우 1^2 * 5 = 5개이나
5 아래의 제곱수를 증가시켜보면
1^1 = 1 -> dp[5 - 1] + 1 = 2
2^2 = 4 -> dp[5 - 4] + 1 = 2
따라서, dp[5] 는 2가 된다. 

재풀이 완료
'''
n = int(input())

dp = [0] * (n + 1)

for i in range(1, n + 1):
    dp[i] = i
    for j in range(1, int(math.sqrt(i)) + 1):
        dp[i] = min(dp[i], dp[i - j * j] + 1)

print(dp[n])
