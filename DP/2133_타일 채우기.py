# https://hjp845.tistory.com/28
n = int(input())

def sol(n):
    if n % 2 != 0:
        return 0
    else:
        dp = [0] * (n + 1)
        dp[0] = 1  # 0줄인 경우는 아무것도 안하는 경우 하나이니까
        dp[2] = 3
        for i in range(4, n + 1):
            dp[i] = dp[i - 2] * 3
            for j in range(i - 4, -1, -2):
                dp[i] += dp[j] * 2
        return dp[n]

print(sol(n))

# 타일 문제는 규칙을 찾아서 점화식을 만들어야 한다.
'''

재풀이 완료


홀수 일때는 만들 수 있는 타일이 없다.

짝수 일때는 
2개일 때 3가지의 새로운 경우가 나온다.
4개일 때 2가지 경우 새로운 경우가 나온다. 즉, (2개로 만들 수 있는 경우의수)=3 * dp[4 - 2] + (4개로 새로 생긴 경우의수)=2 * dp[4 - 4]
.
6개일 때도 새로운 2가지 경우의 수가 나온다. 똑같이 3 * dp[6 - 2] + (6개일 때 새로 생긴 경우의 수)=2 * dp[6 - 4]
.
.
'''